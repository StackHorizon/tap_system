---
// src/components/Carousel.astro
import Container from "./Container.astro";

// Puoi personalizzare queste slide con le tue immagini e testi
const slides = [
    {
        image: "/images/Tap1.jpg",
        alt: "Tapparelle in alluminio coibentato",

    },
    {
        image: "/images/Tap2.jpg",
        alt: "Immagine tapparelle",

    },
    {
        image: "/images/Tap3.jpg",
        alt: "Riparazione tapparelle",

    },
    {
        image: "/images/Tap4.jpg",
        alt: "Immagine tapparelle",

    },
    {
        image: "/images/Tap5.jpg",
        alt: "Riparazione tapparelle",
    },
    {
        image: "/images/Tap6.jpg",
        alt: "Tapparelle motorizzate",
    },
    {
        image: "/images/Tap7.jpg",
        alt: "Tapparelle motorizzate",
    },
    {
        image: "/images/Tap8.jpg",
        alt: "Tapparelle motorizzate",
    },
    {
        image: "/images/Tap9.jpg",
        alt: "Tapparelle motorizzate",
    }
];
---

<div id="carousel" class="relative overflow-hidden py-12">
    <Container>
        <div class="carousel-container relative">
            <!-- Slide wrapper -->
            <div class="carousel-slides flex transition-transform duration-500 ease-in-out">
                {slides.map(slide => (
                        <div class="carousel-slide w-full flex-shrink-0 px-4">
                            <div class="rounded-xl overflow-hidden shadow-xl">
                                <div class="relative aspect-[16/9]">
                                    <img
                                            src={slide.image}
                                            alt={slide.alt}
                                            class="w-full h-full object-cover"
                                    />
                                </div>
                                <div class="p-6 backdrop-blur-sm bg-white/70 dark:bg-gray-800/70">
                                </div>
                            </div>
                        </div>
                ))}
            </div>

            <!-- Navigation buttons -->
            <button
                    class="carousel-prev absolute top-1/2 left-4 -translate-y-1/2 bg-blue-600 hover:bg-blue-700 text-white rounded-full p-3 shadow-lg z-10 transition-all hover:scale-110"
                    aria-label="Slide precedente"
            >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                     stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                </svg>
            </button>

            <button
                    class="carousel-next absolute top-1/2 right-4 -translate-y-1/2 bg-blue-600 hover:bg-blue-700 text-white rounded-full p-3 shadow-lg z-10 transition-all hover:scale-110"
                    aria-label="Slide successiva"
            >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                     stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                </svg>
            </button>

            <!-- Indicators -->
            <div class="carousel-indicators flex justify-center mt-6 gap-2">
                {slides.map((_, index) => (
                        <button
                                class="carousel-indicator w-3 h-3 rounded-full bg-gray-300 dark:bg-gray-600 hover:bg-blue-600 dark:hover:bg-blue-500 transition-colors"
                                data-index={index}
                                aria-label={`Vai alla slide ${index + 1}`}
                        ></button>
                ))}
            </div>
        </div>
    </Container>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const container = document.querySelector('.carousel-slides');
        const slides = document.querySelectorAll('.carousel-slide');
        const prevBtn = document.querySelector('.carousel-prev');
        const nextBtn = document.querySelector('.carousel-next');
        const indicators = document.querySelectorAll('.carousel-indicator');

        let currentIndex = 1; // Modifica da 0 a 1 per partire dalla seconda slide
        const slideCount = slides.length;
        let interval: number;

        // Aggiorna l'indicatore attivo
        const updateIndicators = () => {
            indicators.forEach((indicator, idx) => {
                if (idx === currentIndex) {
                    indicator.classList.add('bg-blue-600', 'dark:bg-blue-500');
                    indicator.classList.remove('bg-gray-300', 'dark:bg-gray-600');
                } else {
                    indicator.classList.remove('bg-blue-600', 'dark:bg-blue-500');
                    indicator.classList.add('bg-gray-300', 'dark:bg-gray-600');
                }
            });
        };

        // Aggiorna la posizione del carosello
        const updateCarousel = () => {
            if (container) {
                (container as HTMLElement).style.transform = `translateX(-${currentIndex * 100}%)`;
                updateIndicators();
            }
        };

        // Vai alla slide successiva
        const nextSlide = () => {
            currentIndex = (currentIndex + 1) % slideCount;
            updateCarousel();
        };

        // Vai alla slide precedente
        const prevSlide = () => {
            currentIndex = (currentIndex - 1 + slideCount) % slideCount;
            updateCarousel();
        };

        // Imposta scorrimento automatico
        const startAutoSlide = () => {
            interval = setInterval(nextSlide, 5000) as unknown as number; // Cambia slide ogni 5 secondi
        };

        // Interrompi scorrimento automatico
        const stopAutoSlide = () => {
            clearInterval(interval);
        };

        // Aggiungi event listeners
        prevBtn?.addEventListener('click', () => {
            prevSlide();
            stopAutoSlide();
            startAutoSlide();
        });

        nextBtn?.addEventListener('click', () => {
            nextSlide();
            stopAutoSlide();
            startAutoSlide();
        });

        // Aggiungi event listeners agli indicatori
        indicators.forEach((indicator, idx) => {
            indicator.addEventListener('click', () => {
                currentIndex = idx;
                updateCarousel();
                stopAutoSlide();
                startAutoSlide();
            });
        });

        // Inizializza
        updateCarousel(); // Importante chiamare questa funzione all'inizio per posizionare il carosello
        updateIndicators();
        startAutoSlide();

        // Ferma lo scorrimento quando il mouse Ã¨ sopra il carosello
        const carousel = document.querySelector('#carousel');
        carousel?.addEventListener('mouseenter', stopAutoSlide);
        carousel?.addEventListener('mouseleave', startAutoSlide);
    });
</script>